"""first message

Revision ID: 1b4aac964a6e
Revises: 
Create Date: 2024-08-30 15:33:19.497198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '1b4aac964a6e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('describe', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_business_category_id'), 'business_category', ['id'], unique=False)
    op.create_index(op.f('ix_business_category_name'), 'business_category', ['name'], unique=True)
    op.create_table('healthcheck',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_healthcheck_id'), 'healthcheck', ['id'], unique=True)
    op.create_index(op.f('ix_healthcheck_name'), 'healthcheck', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('fullname', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('hash_password', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('about_me', sa.Text(), nullable=True),
    sa.Column('photo_url', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_table('article',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('fk_business_category_id', sa.Integer(), nullable=True),
    sa.Column('fk_author_id', mysql.CHAR(length=36), nullable=True),
    sa.ForeignKeyConstraint(['fk_author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['fk_business_category_id'], ['business_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_article_id'), 'article', ['id'], unique=True)
    op.create_table('business',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('omset', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('photo_url', sa.String(length=255), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('contact', mysql.CHAR(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('fk_business_category_id', sa.Integer(), nullable=True),
    sa.Column('fk_owner_id', mysql.CHAR(length=36), nullable=True),
    sa.ForeignKeyConstraint(['fk_business_category_id'], ['business_category.id'], ),
    sa.ForeignKeyConstraint(['fk_owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_business_id'), 'business', ['id'], unique=True)
    op.create_index(op.f('ix_business_name'), 'business', ['name'], unique=True)
    op.create_table('user_needs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('fk_business_category_id', sa.Integer(), nullable=True),
    sa.Column('fk_user_id', mysql.CHAR(length=36), nullable=True),
    sa.ForeignKeyConstraint(['fk_business_category_id'], ['business_category.id'], ),
    sa.ForeignKeyConstraint(['fk_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_needs_id'), 'user_needs', ['id'], unique=False)
    op.create_index(op.f('ix_user_needs_title'), 'user_needs', ['title'], unique=False)
    op.create_table('rating',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('rating_count', sa.Integer(), nullable=True),
    sa.Column('review_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('fk_business_id', mysql.CHAR(length=36), nullable=True),
    sa.Column('fk_rater_id', mysql.CHAR(length=36), nullable=True),
    sa.ForeignKeyConstraint(['fk_business_id'], ['business.id'], ),
    sa.ForeignKeyConstraint(['fk_rater_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rating_id'), 'rating', ['id'], unique=True)
    op.create_index(op.f('ix_rating_rating_count'), 'rating', ['rating_count'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rating_rating_count'), table_name='rating')
    op.drop_index(op.f('ix_rating_id'), table_name='rating')
    op.drop_table('rating')
    op.drop_index(op.f('ix_user_needs_title'), table_name='user_needs')
    op.drop_index(op.f('ix_user_needs_id'), table_name='user_needs')
    op.drop_table('user_needs')
    op.drop_index(op.f('ix_business_name'), table_name='business')
    op.drop_index(op.f('ix_business_id'), table_name='business')
    op.drop_table('business')
    op.drop_index(op.f('ix_article_id'), table_name='article')
    op.drop_table('article')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_healthcheck_name'), table_name='healthcheck')
    op.drop_index(op.f('ix_healthcheck_id'), table_name='healthcheck')
    op.drop_table('healthcheck')
    op.drop_index(op.f('ix_business_category_name'), table_name='business_category')
    op.drop_index(op.f('ix_business_category_id'), table_name='business_category')
    op.drop_table('business_category')
    # ### end Alembic commands ###
