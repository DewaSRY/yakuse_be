"""Initial migration

Revision ID: 2ab55d1846bd
Revises: 
Create Date: 2024-08-29 11:10:24.226285

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2ab55d1846bd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_rating_id', table_name='rating')
    op.drop_index('ix_rating_rating_count', table_name='rating')
    op.drop_table('rating')
    op.drop_index('ix_article_id', table_name='article')
    op.drop_table('article')
    op.drop_index('ix_business_category_id', table_name='business_category')
    op.drop_index('ix_business_category_name', table_name='business_category')
    op.drop_table('business_category')
    op.drop_index('ix_business_id', table_name='business')
    op.drop_index('ix_business_name', table_name='business')
    op.drop_table('business')
    op.drop_index('ix_user_needs_id', table_name='user_needs')
    op.drop_index('ix_user_needs_title', table_name='user_needs')
    op.drop_table('user_needs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_needs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_visible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('fk_business_category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fk_user_id', sa.CHAR(length=36), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_business_category_id'], ['business_category.id'], name='user_needs_fk_business_category_id_fkey'),
    sa.ForeignKeyConstraint(['fk_user_id'], ['users.id'], name='user_needs_fk_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_needs_pkey')
    )
    op.create_index('ix_user_needs_title', 'user_needs', ['title'], unique=False)
    op.create_index('ix_user_needs_id', 'user_needs', ['id'], unique=False)
    op.create_table('business',
    sa.Column('id', sa.CHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('omset', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('photo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('location', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('contact', sa.CHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('fk_business_category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fk_owner_id', sa.CHAR(length=36), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_business_category_id'], ['business_category.id'], name='business_fk_business_category_id_fkey'),
    sa.ForeignKeyConstraint(['fk_owner_id'], ['users.id'], name='business_fk_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='business_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_business_name', 'business', ['name'], unique=True)
    op.create_index('ix_business_id', 'business', ['id'], unique=True)
    op.create_table('business_category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('business_category_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('describe', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='business_category_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_business_category_name', 'business_category', ['name'], unique=True)
    op.create_index('ix_business_category_id', 'business_category', ['id'], unique=False)
    op.create_table('article',
    sa.Column('id', sa.CHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('fk_business_category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fk_author_id', sa.CHAR(length=36), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_author_id'], ['users.id'], name='article_fk_author_id_fkey'),
    sa.ForeignKeyConstraint(['fk_business_category_id'], ['business_category.id'], name='article_fk_business_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='article_pkey')
    )
    op.create_index('ix_article_id', 'article', ['id'], unique=True)
    op.create_table('rating',
    sa.Column('id', sa.CHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('rating_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('review_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('fk_business_id', sa.CHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('fk_rater_id', sa.CHAR(length=36), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_business_id'], ['business.id'], name='rating_fk_business_id_fkey'),
    sa.ForeignKeyConstraint(['fk_rater_id'], ['users.id'], name='rating_fk_rater_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='rating_pkey')
    )
    op.create_index('ix_rating_rating_count', 'rating', ['rating_count'], unique=False)
    op.create_index('ix_rating_id', 'rating', ['id'], unique=True)
    # ### end Alembic commands ###
